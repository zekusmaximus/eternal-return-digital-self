{"version":3,"file":"Onboarding-Dn7LYJ1Y.js","sources":["../../src/components/Onboarding/IntroductionOverlay.tsx","../../src/components/Onboarding/NodeTooltip.tsx","../../src/components/Onboarding/HelpIcon.tsx","../../src/components/Onboarding/Onboarding.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport './Onboarding.css';\r\n\r\ninterface IntroductionOverlayProps {\r\n  onClose: () => void;\r\n}\r\n\r\nconst IntroductionOverlay: React.FC<IntroductionOverlayProps> = ({ onClose }) => {\r\n  const [visible, setVisible] = useState(true);\r\n\r\n  const handleClose = () => {\r\n    setVisible(false);\r\n    \r\n    // Store in localStorage that the user has seen the intro\r\n    localStorage.setItem('hasSeenIntro', 'true');\r\n    \r\n    setTimeout(() => {\r\n      onClose();\r\n    }, 500); // Short delay to allow fade out animation\r\n  };\r\n\r\n  return visible ? (\r\n    <div className=\"intro-overlay\">\r\n      <div className=\"intro-content\">\r\n        <h1 className=\"intro-title\">The Eternal Return of the Digital Self</h1>\r\n        <p className=\"intro-description\">\r\n          A recursive narrative of digital consciousness, where every node holds a fragment of the story.\r\n          Navigate this constellation of interconnected narratives to uncover the emergent patterns of existence.\r\n        </p>\r\n        \r\n        <div className=\"node-example\">\r\n          <div className=\"example-node\"></div>\r\n          <div className=\"click-indicator\"></div>\r\n        </div>\r\n        \r\n        <p className=\"intro-description\">\r\n          Click on nodes to explore connections and reveal the narrative pathways that bind these digital fragments together.\r\n        </p>\r\n        \r\n        <button className=\"begin-button\" onClick={handleClose}>\r\n          Begin Exploration\r\n        </button>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default IntroductionOverlay;","import React, { useState, useEffect } from 'react';\r\nimport './Onboarding.css';\r\n\r\ninterface NodeTooltipProps {\r\n  text: string;\r\n  position: { x: number; y: number } | null;\r\n}\r\n\r\nconst NodeTooltip: React.FC<NodeTooltipProps> = ({ text, position }) => {\r\n  const [visible, setVisible] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    if (position) {\r\n      setVisible(true);\r\n    } else {\r\n      setVisible(false);\r\n    }\r\n  }, [position]);\r\n\r\n  if (!visible || !position) return null;\r\n\r\n  const tooltipStyle: React.CSSProperties = {\r\n    left: position.x + 'px',\r\n    top: (position.y - 40) + 'px', // Position above the node\r\n    opacity: visible ? 1 : 0\r\n  };\r\n\r\n  return (\r\n    <div className=\"node-tooltip\" style={tooltipStyle}>\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NodeTooltip;","import { useState } from 'react';\r\nimport './Onboarding.css';\r\n\r\ninterface HelpIconProps {\r\n  onResetIntro: () => void;\r\n}\r\n\r\nconst HelpIcon: React.FC<HelpIconProps> = ({ onResetIntro }) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const handleResetIntro = () => {\r\n    localStorage.removeItem('hasSeenIntro');\r\n    onResetIntro();\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"help-icon-container\">\r\n        <div className=\"help-icon\" onClick={toggleModal}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n            <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm0-4h-2V7h2v8z\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n\r\n      {showModal && (\r\n        <div className=\"help-modal\">\r\n          <div className=\"help-modal-content\">\r\n            <button className=\"help-modal-close\" onClick={toggleModal}>×</button>\r\n            <h2 className=\"help-modal-title\">Navigation Guide</h2>\r\n            \r\n            <div className=\"help-instructions\">\r\n              <h3>Exploring the Constellation</h3>\r\n              <p>\r\n                Each node in the constellation represents a fragment of the narrative. \r\n                Click on a node to read its content and discover connections to other nodes.\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"help-instructions\">\r\n              <h3>Navigation Controls</h3>\r\n              <p>\r\n                • Click and drag to rotate the constellation<br />\r\n                • Scroll to zoom in and out<br />\r\n                • Click connected nodes to navigate between narrative fragments\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"help-instructions\">\r\n              <h3>Reading Experience</h3>\r\n              <p>\r\n                The story unfolds differently depending on your path through the constellation. \r\n                Revisit nodes to discover new patterns and connections.\r\n              </p>\r\n            </div>\r\n            \r\n            <button className=\"reset-intro-button\" onClick={handleResetIntro}>\r\n              Show Introduction Again\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HelpIcon;","import { useState, useEffect } from 'react';\r\nimport IntroductionOverlay from './IntroductionOverlay';\r\nimport NodeTooltip from './NodeTooltip';\r\nimport HelpIcon from './HelpIcon';\r\nimport './Onboarding.css';\r\n\r\n// Custom event types\r\ninterface NodeHoverEvent extends Event {\r\n  detail: {\r\n    position: { x: number; y: number };\r\n    nodeId: string;\r\n  };\r\n}\r\n\r\nconst Onboarding: React.FC = () => {\r\n  const [showIntro, setShowIntro] = useState(false);\r\n  const [tooltipPosition, setTooltipPosition] = useState<{ x: number; y: number } | null>(null);\r\n  // Check if user has seen the intro before\r\n  useEffect(() => {\r\n    const hasSeenIntro = localStorage.getItem('hasSeenIntro') === 'true';\r\n    setShowIntro(!hasSeenIntro);\r\n    \r\n    // Add a class to the document for initial node pulse animation\r\n    if (!hasSeenIntro) {\r\n      document.body.classList.add('first-visit');\r\n      \r\n      // Remove the class after animation completes\r\n      const timer = setTimeout(() => {\r\n        document.body.classList.remove('first-visit');\r\n      }, 8000); // Animation runs 3 times at 2s each plus some buffer\r\n      \r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, []);\r\n\r\n  // Handle tooltip positioning based on custom events\r\n  useEffect(() => {\r\n    const handleNodeHover = (e: Event) => {\r\n      const customEvent = e as NodeHoverEvent;\r\n      if (customEvent.detail && customEvent.detail.position) {\r\n        setTooltipPosition(customEvent.detail.position);\r\n      }\r\n    };\r\n\r\n    const handleNodeUnhover = () => {\r\n      setTooltipPosition(null);\r\n    };\r\n\r\n    // Add event listeners for custom node hover events\r\n    window.addEventListener('node-hover', handleNodeHover);\r\n    window.addEventListener('node-unhover', handleNodeUnhover);\r\n\r\n    return () => {\r\n      window.removeEventListener('node-hover', handleNodeHover);\r\n      window.removeEventListener('node-unhover', handleNodeUnhover);\r\n    };\r\n  }, []);\r\n\r\n  const handleCloseIntro = () => {\r\n    setShowIntro(false);\r\n  };\r\n\r\n  const handleResetIntro = () => {\r\n    setShowIntro(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showIntro && <IntroductionOverlay onClose={handleCloseIntro} />}\r\n      <NodeTooltip \r\n        text=\"Click to explore this node\" \r\n        position={tooltipPosition} \r\n      />\r\n      <HelpIcon onResetIntro={handleResetIntro} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Onboarding;"],"names":["IntroductionOverlay","onClose","visible","setVisible","useState","handleClose","jsxs","jsx","NodeTooltip","text","position","useEffect","tooltipStyle","HelpIcon","onResetIntro","showModal","setShowModal","toggleModal","handleResetIntro","Fragment","Onboarding","showIntro","setShowIntro","tooltipPosition","setTooltipPosition","hasSeenIntro","timer","handleNodeHover","e","customEvent","handleNodeUnhover","handleCloseIntro"],"mappings":"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"}