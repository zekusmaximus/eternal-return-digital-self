{"version":3,"file":"MiniConstellation-ue-DY_FZ.js","sources":["../../src/components/NodeView/MiniConstellation.tsx"],"sourcesContent":["import React, { useMemo, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectConstellationNodes, selectConnections } from '../../store/slices/nodesSlice';\r\nimport { nodeSelected } from '../../store/slices/interfaceSlice';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { OrbitControls, Bounds } from '@react-three/drei';\r\nimport { NodesInstanced } from '../Constellation/NodesInstanced';\r\nimport ConnectionsBatched from '../Constellation/ConnectionsBatched';\r\nimport { InstancedMesh } from 'three';\r\n\r\ninterface MiniConstellationProps {\r\n  currentNodeId: string;\r\n}\r\n\r\nconst MiniConstellation: React.FC<MiniConstellationProps> = ({ currentNodeId }) => {\r\n  const dispatch = useDispatch();\r\n  const nodes = useSelector(selectConstellationNodes);\r\n  const connections = useSelector(selectConnections);\r\n  const instancedMeshRef = useRef<InstancedMesh>(null!);\r\n\r\n  const mappedConnections = useMemo(() => connections.map(c => ({ source: c.start, target: c.end })), [connections]);\r\n\r\n  const clickableNodeIds = useMemo(() => {\r\n    const connectedIds = new Set<string>();\r\n    connections.forEach(conn => {\r\n      if (conn.start === currentNodeId) {\r\n        connectedIds.add(conn.end);\r\n      } else if (conn.end === currentNodeId) {\r\n        connectedIds.add(conn.start);\r\n      }\r\n    });\r\n    return Array.from(connectedIds);\r\n  }, [connections, currentNodeId]);\r\n\r\n  const handleNodeClick = (nodeId: string) => {\r\n    dispatch(nodeSelected(nodeId));\r\n  };\r\n\r\n  const nodePositions = useMemo(() => {\r\n    const positions: { [key: string]: [number, number, number] } = {};\r\n    nodes.forEach((node, index) => {\r\n      const numNodes = nodes.length;\r\n      const radius = 5;\r\n      const phi = Math.acos(-1 + (2 * index) / numNodes);\r\n      const theta = Math.sqrt(numNodes * Math.PI) * phi;\r\n      const x = radius * Math.cos(theta) * Math.sin(phi);\r\n      const y = radius * Math.sin(theta) * Math.sin(phi);\r\n      const z = radius * Math.cos(phi);\r\n      positions[node.id] = [x, y, z];\r\n    });\r\n    return positions;\r\n  }, [nodes]);\r\n\r\n  return (\r\n    <div className=\"mini-constellation-container\" style={{ width: '200px', height: '200px' }}>\r\n      <Canvas>\r\n        <ambientLight intensity={0.5} />\r\n        <pointLight position={[10, 10, 10]} />\r\n        <Bounds fit clip observe>\r\n          <NodesInstanced\r\n            ref={instancedMeshRef}\r\n            nodes={nodes}\r\n            nodePositions={nodePositions}\r\n            connections={connections}\r\n            overrideSelectedNodeId={currentNodeId}\r\n            onNodeClick={handleNodeClick}\r\n            clickableNodeIds={clickableNodeIds}\r\n          />\r\n          <ConnectionsBatched ref={instancedMeshRef} connections={mappedConnections} nodePositions={nodePositions} />\r\n        </Bounds>\r\n        <OrbitControls enableZoom={false} enablePan={false} />\r\n      </Canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiniConstellation;"],"names":["MiniConstellation","currentNodeId","dispatch","useDispatch","nodes","useSelector","selectConstellationNodes","connections","selectConnections","instancedMeshRef","useRef","mappedConnections","useMemo","c","clickableNodeIds","connectedIds","conn","handleNodeClick","nodeId","nodeSelected","nodePositions","positions","node","index","numNodes","radius","phi","theta","x","y","z","jsx","jsxs","Canvas","Bounds","NodesInstanced","ConnectionsBatched","OrbitControls"],"mappings":"kPAcA,MAAMA,EAAsD,CAAC,CAAE,cAAAC,KAAoB,CACjF,MAAMC,EAAWC,EAAY,EACvBC,EAAQC,EAAYC,CAAwB,EAC5CC,EAAcF,EAAYG,CAAiB,EAC3CC,EAAmBC,SAAsB,IAAK,EAE9CC,EAAoBC,EAAAA,QAAQ,IAAML,EAAY,QAAU,CAAE,OAAQM,EAAE,MAAO,OAAQA,EAAE,KAAM,EAAG,CAACN,CAAW,CAAC,EAE3GO,EAAmBF,EAAAA,QAAQ,IAAM,CAC/B,MAAAG,MAAmB,IACzB,OAAAR,EAAY,QAAgBS,GAAA,CACtBA,EAAK,QAAUf,EACJc,EAAA,IAAIC,EAAK,GAAG,EAChBA,EAAK,MAAQf,GACTc,EAAA,IAAIC,EAAK,KAAK,CAC7B,CACD,EACM,MAAM,KAAKD,CAAY,CAAA,EAC7B,CAACR,EAAaN,CAAa,CAAC,EAEzBgB,EAAmBC,GAAmB,CACjChB,EAAAiB,EAAaD,CAAM,CAAC,CAC/B,EAEME,EAAgBR,EAAAA,QAAQ,IAAM,CAClC,MAAMS,EAAyD,CAAC,EAC1D,OAAAjB,EAAA,QAAQ,CAACkB,EAAMC,IAAU,CAC7B,MAAMC,EAAWpB,EAAM,OACjBqB,EAAS,EACTC,EAAM,KAAK,KAAK,GAAM,EAAIH,EAASC,CAAQ,EAC3CG,EAAQ,KAAK,KAAKH,EAAW,KAAK,EAAE,EAAIE,EACxCE,EAAIH,EAAS,KAAK,IAAIE,CAAK,EAAI,KAAK,IAAID,CAAG,EAC3CG,EAAIJ,EAAS,KAAK,IAAIE,CAAK,EAAI,KAAK,IAAID,CAAG,EAC3CI,EAAIL,EAAS,KAAK,IAAIC,CAAG,EAC/BL,EAAUC,EAAK,EAAE,EAAI,CAACM,EAAGC,EAAGC,CAAC,CAAA,CAC9B,EACMT,CAAA,EACN,CAACjB,CAAK,CAAC,EAEV,OACG2B,EAAAA,IAAA,MAAA,CAAI,UAAU,+BAA+B,MAAO,CAAE,MAAO,QAAS,OAAQ,OAAA,EAC7E,SAAAC,EAAAA,KAACC,EACC,CAAA,SAAA,CAACF,EAAAA,IAAA,eAAA,CAAa,UAAW,EAAK,CAAA,QAC7B,aAAW,CAAA,SAAU,CAAC,GAAI,GAAI,EAAE,EAAG,SACnCG,EAAO,CAAA,IAAG,GAAC,KAAI,GAAC,QAAO,GACtB,SAAA,CAAAH,EAAA,IAACI,EAAA,CACC,IAAK1B,EACL,MAAAL,EACA,cAAAgB,EACA,YAAAb,EACA,uBAAwBN,EACxB,YAAagB,EACb,iBAAAH,CAAA,CACF,QACCsB,EAAmB,CAAA,IAAK3B,EAAkB,YAAaE,EAAmB,cAAAS,CAA8B,CAAA,CAAA,EAC3G,EACCW,EAAA,IAAAM,EAAA,CAAc,WAAY,GAAO,UAAW,EAAO,CAAA,CAAA,CAAA,CACtD,CACF,CAAA,CAEJ"}