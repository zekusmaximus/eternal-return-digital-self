{"version":3,"mappings":";yzBAEA,MAAMA,EAAwB,IAC3BC,OAAA,OAAI,UAAU,eACb,UAACA,OAAA,OAAI,UAAU,kBACb,UAACC,MAAA,OAAI,UAAU,OAAQ,GACvBA,MAAC,MAAI,WAAU,QAAS,GACxBA,MAAC,MAAI,WAAU,QAAS,IAC1B,EACAD,OAAC,MAAI,WAAU,kBACb,UAAAC,MAAC,MAAG,SAAsC,2CAC1CA,MAAC,MAAI,WAAU,iBAAkB,GACjCA,MAAC,KAAE,SAAqB,0BAC1B,IACF,ECTIC,EAAMC,OAAK,IAAMC,EAAA,WAAO,mBAAO,OAAAC,KAAA,gCAAC,EAMhCC,EAAqB,SAAY,CAO/B,IAGF,QAAQ,IAAI,iCAAiC,QACtCC,EAAO,CACN,cAAM,sCAAuCA,CAAK,EAGhE,EAGAD,EAAmB,EAGnBE,EAAS,WAAW,SAAS,eAAe,MAAM,CAAgB,EAAE,OACjEP,EAAA,IAAAQ,EAAM,WAAN,CACC,SAACR,EAAA,IAAAS,EAAA,UAAS,SAAWT,EAAA,IAAAF,EAAY,IAC/B,SAACE,EAAA,IAAAC,EAAA,EAAI,EACP,CACF,EACF","names":["RootLoading","jsxs","jsx","App","lazy","__vitePreload","n","initializeServices","error","ReactDOM","React","Suspense"],"ignoreList":[],"sources":["../../src/components/Loading/RootLoading.tsx","../../src/main.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst RootLoading: React.FC = () => (\r\n  <div className=\"root-loading\">\r\n    <div className=\"stars-container\">\r\n      <div className=\"stars\"></div>\r\n      <div className=\"stars2\"></div>\r\n      <div className=\"stars3\"></div>\r\n    </div>\r\n    <div className=\"loading-message\">\r\n      <h1>The Eternal Return of the Digital Self</h1>\r\n      <div className=\"loading-spinner\"></div>\r\n      <p>Loading experience...</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default RootLoading;","import React, { lazy, Suspense } from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\n\r\n// Lazy load the main App component\r\nconst App = lazy(() => import('./app'));\r\n\r\n// Import loading component from separate file for better Fast Refresh\r\nimport RootLoading from './components/Loading/RootLoading';\r\n\r\n// Initialize analytics or other non-critical services\r\nconst initializeServices = async () => {\r\n  // This would be the place to load any non-critical services\r\n  // that shouldn't block the initial render\r\n  \r\n  // Example: analytics, monitoring, etc.\r\n  if (process.env.NODE_ENV === 'production') {\r\n    // Dynamically import analytics only in production\r\n    try {\r\n      // const analytics = await import('./services/analytics');\r\n      // analytics.initialize();\r\n      console.log('Production services initialized');\r\n    } catch (error) {\r\n      console.error('Failed to load production services:', error);\r\n    }\r\n  }\r\n};\r\n\r\n// Start initializing services in the background\r\ninitializeServices();\r\n\r\n// Render the application\r\nReactDOM.createRoot(document.getElementById('root') as HTMLElement).render(\r\n  <React.StrictMode>\r\n    <Suspense fallback={<RootLoading />}>\r\n      <App />\r\n    </Suspense>\r\n  </React.StrictMode>\r\n);"],"file":"assets/index-M49dA8JE.js"}