{"version":3,"file":"MiniConstellation-9K4DNj81.js","sources":["../../src/components/NodeView/MiniConstellation.tsx"],"sourcesContent":["import { useMemo, useRef, useState, useEffect, forwardRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectConstellationNodes, selectConnections } from '../../store/slices/nodesSlice';\r\nimport { nodeSelected, selectSelectedNodeId } from '../../store/slices/interfaceSlice';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { OrbitControls } from '@react-three/drei';\r\nimport { NodesInstanced } from '../Constellation/NodesInstanced';\r\nimport { ConnectionsBatched } from '../Constellation/ConnectionsBatched';\r\nimport { InstancedMesh } from 'three';\r\n\r\n// No props are needed, so we can remove the interface.\r\n// No props are needed for this component.\r\n// Unique ID for this component instance to prevent context collisions\r\nconst MiniConstellation = forwardRef<HTMLDivElement, Record<string, never>>((_props, ref) => {\r\n  const dispatch = useDispatch();\r\n  const nodes = useSelector(selectConstellationNodes);\r\n  const selectedNodeId = useSelector(selectSelectedNodeId);\r\n  const connections = useSelector(selectConnections);\r\n  const instancedMeshRef = useRef<InstancedMesh>(null!);\r\n  const [isInteracting, setIsInteracting] = useState(false);\r\n  const canvasId = useMemo(() => `mini-constellation-canvas-${Date.now()}`, []);\r\n\r\n  // Clear any existing WebGL contexts when unmounting to prevent conflicts\r\n  useEffect(() => {\r\n    return () => {\r\n      try {\r\n        // Clean up function runs on unmount\r\n        const canvas = document.getElementById(canvasId);\r\n        if (canvas && canvas instanceof HTMLCanvasElement) {\r\n          // Force WebGL context release\r\n          const gl = canvas.getContext('webgl') || canvas.getContext('webgl2');\r\n          if (gl) {\r\n            gl.getExtension('WEBGL_lose_context')?.loseContext();\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.warn('Error cleaning up WebGL context:', error);\r\n      }\r\n    };\r\n  }, [canvasId]);\r\n\r\n  const mappedConnections = useMemo(() => connections.map(c => ({ source: c.start, target: c.end })), [connections]);\r\n  const clickableNodeIds = useMemo(() => {\r\n    const connectedIds = new Set<string>();\r\n    if (selectedNodeId) {\r\n      connections.forEach(conn => {\r\n        if (conn.start === selectedNodeId) {\r\n          connectedIds.add(conn.end);\r\n        } else if (conn.end === selectedNodeId) {\r\n          connectedIds.add(conn.start);\r\n        }\r\n      });\r\n    }\r\n    return Array.from(connectedIds);\r\n  }, [connections, selectedNodeId]);\r\n\r\n  const handleNodeClick = (nodeId: string) => {\r\n    dispatch(nodeSelected(nodeId));\r\n  };\r\n\r\n  const nodePositions = useMemo(() => {\r\n    const positions: { [key: string]: [number, number, number] } = {};\r\n    \r\n    // Use the same Fibonacci sphere algorithm as the main constellation\r\n    nodes.forEach((node, index) => {\r\n      const numNodes = nodes.length;\r\n      // Use smaller radius for minimap\r\n      const radius = 3.0;\r\n      \r\n      // Fibonacci sphere algorithm (same as ConstellationView)\r\n      const offset = 2.0 / numNodes;\r\n      const increment = Math.PI * (3.0 - Math.sqrt(5.0));\r\n      \r\n      const y = ((index * offset) - 1) + (offset / 2);\r\n      const r = Math.sqrt(1 - y * y);\r\n      const phi = index * increment;\r\n      \r\n      const x = Math.cos(phi) * r * radius;\r\n      const z = Math.sin(phi) * r * radius;\r\n      \r\n      positions[node.id] = [x, y * radius, z];\r\n    });\r\n    \r\n    return positions;\r\n  }, [nodes]);\r\n\r\n  // Create position synchronizer for MiniConstellation\r\n  const positionSynchronizer = useMemo(() => ({\r\n    updatePositions: (_time: number, isMinimap?: boolean) => {\r\n      // For minimap, return fixed positions without any movement\r\n      if (isMinimap) {\r\n        return nodePositions;\r\n      }\r\n      // For main view, this wouldn't be used in MiniConstellation\r\n      return nodePositions;\r\n    },\r\n    getCurrentPositions: () => nodePositions\r\n  }), [nodePositions]);\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className=\"mini-constellation-container\"\r\n      style={{\r\n        width: '100%',\r\n        height: '100%',\r\n        borderRadius: '8px',\r\n        cursor: isInteracting ? 'grabbing' : 'grab',\r\n        boxShadow: '0 0 10px rgba(0,0,0,0.3)',\r\n        backgroundColor: 'rgba(0,0,0,0.1)',\r\n        border: '1px solid rgba(255,255,255,0.2)',\r\n        zIndex: 1000,\r\n        pointerEvents: 'auto',\r\n        padding: 0,\r\n        margin: 0,\r\n        overflow: 'hidden',\r\n        position: 'relative'\r\n      }}\r\n      // Add separate onMouseEnter/onMouseLeave for hover effects\r\n      onMouseEnter={(e) => {\r\n        e.currentTarget.style.boxShadow = '0 0 15px rgba(255,255,255,0.3)';\r\n      }}\r\n      onMouseLeave={(e) => {\r\n        e.currentTarget.style.boxShadow = '0 0 10px rgba(0,0,0,0.3)';\r\n        setIsInteracting(false);\r\n      }}\r\n    >\r\n      <Canvas\r\n        id={canvasId}\r\n        frameloop=\"always\"\r\n        style={{ \r\n          width: '100%', \r\n          height: '100%',\r\n          cursor: 'grab',\r\n          touchAction: 'none'\r\n        }}\r\n        camera={{\r\n          position: [0, 0, 8],\r\n          fov: 35,\r\n          near: 0.1,\r\n          far: 100\r\n        }}\r\n        gl={{\r\n          antialias: true,\r\n          alpha: true,\r\n          powerPreference: 'default',\r\n          preserveDrawingBuffer: true\r\n        }}\r\n        dpr={[1, 2]} // Limit pixel ratio to prevent performance issues\r\n        performance={{ min: 0.5 }} // Allow reducing quality for better performance\r\n      >\r\n        <ambientLight intensity={0.8} />\r\n        <pointLight position={[10, 10, 10]} intensity={1.0} />\r\n        <pointLight position={[-10, -10, 10]} intensity={0.5} />\r\n        <OrbitControls\r\n          enableZoom={false}\r\n          enablePan={false}\r\n          rotateSpeed={1.5}\r\n          enableDamping={true}\r\n          dampingFactor={0.1}\r\n          minPolarAngle={0}\r\n          maxPolarAngle={Math.PI}\r\n          onStart={() => setIsInteracting(true)}\r\n          onEnd={() => setIsInteracting(false)}\r\n          target={[0, 0, 0]}\r\n        />\r\n        \r\n        <group scale={[0.6, 0.6, 0.6]}>\r\n          <NodesInstanced\r\n            ref={instancedMeshRef}\r\n            nodes={nodes}\r\n            nodePositions={nodePositions}\r\n            connections={connections}\r\n            overrideSelectedNodeId={selectedNodeId ?? undefined}\r\n            onNodeClick={handleNodeClick}\r\n            clickableNodeIds={clickableNodeIds}\r\n            isMinimap={true}\r\n            isInitialChoicePhase={false}\r\n            triumvirateActive={false}\r\n            triumvirateNodes={[]}\r\n            positionSynchronizer={positionSynchronizer}\r\n          />\r\n          <ConnectionsBatched\r\n            connections={mappedConnections}\r\n            nodePositions={nodePositions}\r\n            selectedNodeId={selectedNodeId}\r\n            hoveredNodeId={null}\r\n            positionSynchronizer={positionSynchronizer}\r\n            isMinimap={true}\r\n          />\r\n        </group>\r\n      </Canvas>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MiniConstellation;\r\n"],"names":["MiniConstellation","forwardRef","_props","ref","dispatch","useDispatch","nodes","useSelector","selectConstellationNodes","selectedNodeId","selectSelectedNodeId","connections","selectConnections","instancedMeshRef","useRef","isInteracting","setIsInteracting","useState","canvasId","useMemo","useEffect","canvas","gl","_a","error","mappedConnections","c","clickableNodeIds","connectedIds","conn","handleNodeClick","nodeId","nodeSelected","nodePositions","positions","node","index","numNodes","radius","offset","increment","y","r","phi","x","z","positionSynchronizer","_time","isMinimap","jsx","jsxs","Canvas","OrbitControls","NodesInstanced","ConnectionsBatched"],"mappings":"6OAaA,MAAMA,EAAoBC,EAAA,WAAkD,CAACC,EAAQC,IAAQ,CAC3F,MAAMC,EAAWC,EAAY,EACvBC,EAAQC,EAAYC,CAAwB,EAC5CC,EAAiBF,EAAYG,CAAoB,EACjDC,EAAcJ,EAAYK,CAAiB,EAC3CC,EAAmBC,SAAsB,IAAK,EAC9C,CAACC,EAAeC,CAAgB,EAAIC,EAAAA,SAAS,EAAK,EAClDC,EAAWC,UAAQ,IAAM,6BAA6B,KAAK,IAAI,CAAC,GAAI,EAAE,EAG5EC,EAAAA,UAAU,IACD,IAAM,OACP,GAAA,CAEI,MAAAC,EAAS,SAAS,eAAeH,CAAQ,EAC3C,GAAAG,GAAUA,aAAkB,kBAAmB,CAEjD,MAAMC,EAAKD,EAAO,WAAW,OAAO,GAAKA,EAAO,WAAW,QAAQ,EAC/DC,KACCC,EAAAD,EAAA,aAAa,oBAAoB,IAAjC,MAAAC,EAAoC,cACzC,QAEKC,EAAO,CACN,QAAA,KAAK,mCAAoCA,CAAK,CAAA,CAE1D,EACC,CAACN,CAAQ,CAAC,EAEb,MAAMO,EAAoBN,EAAAA,QAAQ,IAAMR,EAAY,QAAU,CAAE,OAAQe,EAAE,MAAO,OAAQA,EAAE,KAAM,EAAG,CAACf,CAAW,CAAC,EAC3GgB,EAAmBR,EAAAA,QAAQ,IAAM,CAC/B,MAAAS,MAAmB,IACzB,OAAInB,GACFE,EAAY,QAAgBkB,GAAA,CACtBA,EAAK,QAAUpB,EACJmB,EAAA,IAAIC,EAAK,GAAG,EAChBA,EAAK,MAAQpB,GACTmB,EAAA,IAAIC,EAAK,KAAK,CAC7B,CACD,EAEI,MAAM,KAAKD,CAAY,CAAA,EAC7B,CAACjB,EAAaF,CAAc,CAAC,EAE1BqB,EAAmBC,GAAmB,CACjC3B,EAAA4B,EAAaD,CAAM,CAAC,CAC/B,EAEME,EAAgBd,EAAAA,QAAQ,IAAM,CAClC,MAAMe,EAAyD,CAAC,EAG1D,OAAA5B,EAAA,QAAQ,CAAC6B,EAAMC,IAAU,CAC7B,MAAMC,EAAW/B,EAAM,OAEjBgC,EAAS,EAGTC,EAAS,EAAMF,EACfG,EAAY,KAAK,IAAM,EAAM,KAAK,KAAK,CAAG,GAE1CC,EAAML,EAAQG,EAAU,EAAMA,EAAS,EACvCG,EAAI,KAAK,KAAK,EAAID,EAAIA,CAAC,EACvBE,EAAMP,EAAQI,EAEdI,EAAI,KAAK,IAAID,CAAG,EAAID,EAAIJ,EACxBO,EAAI,KAAK,IAAIF,CAAG,EAAID,EAAIJ,EAE9BJ,EAAUC,EAAK,EAAE,EAAI,CAACS,EAAGH,EAAIH,EAAQO,CAAC,CAAA,CACvC,EAEMX,CAAA,EACN,CAAC5B,CAAK,CAAC,EAGJwC,EAAuB3B,EAAAA,QAAQ,KAAO,CAC1C,gBAAiB,CAAC4B,EAAeC,IAGtBf,EAKX,oBAAqB,IAAMA,CAAA,GACzB,CAACA,CAAa,CAAC,EAGjB,OAAAgB,EAAA,IAAC,MAAA,CACC,IAAA9C,EACA,UAAU,+BACV,MAAO,CACL,MAAO,OACP,OAAQ,OACR,aAAc,MACd,OAAQY,EAAgB,WAAa,OACrC,UAAW,2BACX,gBAAiB,kBACjB,OAAQ,kCACR,OAAQ,IACR,cAAe,OACf,QAAS,EACT,OAAQ,EACR,SAAU,SACV,SAAU,UACZ,EAEA,aAAe,GAAM,CACjB,EAAA,cAAc,MAAM,UAAY,gCACpC,EACA,aAAe,GAAM,CACjB,EAAA,cAAc,MAAM,UAAY,2BAClCC,EAAiB,EAAK,CACxB,EAEA,SAAAkC,EAAA,KAACC,EAAA,CACC,GAAIjC,EACJ,UAAU,SACV,MAAO,CACL,MAAO,OACP,OAAQ,OACR,OAAQ,OACR,YAAa,MACf,EACA,OAAQ,CACN,SAAU,CAAC,EAAG,EAAG,CAAC,EAClB,IAAK,GACL,KAAM,GACN,IAAK,GACP,EACA,GAAI,CACF,UAAW,GACX,MAAO,GACP,gBAAiB,UACjB,sBAAuB,EACzB,EACA,IAAK,CAAC,EAAG,CAAC,EACV,YAAa,CAAE,IAAK,EAAI,EAExB,SAAA,CAAC+B,EAAAA,IAAA,eAAA,CAAa,UAAW,EAAK,CAAA,EAC9BA,MAAC,cAAW,SAAU,CAAC,GAAI,GAAI,EAAE,EAAG,UAAW,EAAK,EACpDA,MAAC,cAAW,SAAU,CAAC,IAAK,IAAK,EAAE,EAAG,UAAW,GAAK,EACtDA,EAAA,IAACG,EAAA,CACC,WAAY,GACZ,UAAW,GACX,YAAa,IACb,cAAe,GACf,cAAe,GACf,cAAe,EACf,cAAe,KAAK,GACpB,QAAS,IAAMpC,EAAiB,EAAI,EACpC,MAAO,IAAMA,EAAiB,EAAK,EACnC,OAAQ,CAAC,EAAG,EAAG,CAAC,CAAA,CAClB,SAEC,QAAM,CAAA,MAAO,CAAC,GAAK,GAAK,EAAG,EAC1B,SAAA,CAAAiC,EAAA,IAACI,EAAA,CACC,IAAKxC,EACL,MAAAP,EACA,cAAA2B,EACA,YAAAtB,EACA,uBAAwBF,GAAkB,OAC1C,YAAaqB,EACb,iBAAAH,EACA,UAAW,GACX,qBAAsB,GACtB,kBAAmB,GACnB,iBAAkB,CAAC,EACnB,qBAAAmB,CAAA,CACF,EACAG,EAAA,IAACK,EAAA,CACC,YAAa7B,EACb,cAAAQ,EACA,eAAAxB,EACA,cAAe,KACf,qBAAAqC,EACA,UAAW,EAAA,CAAA,CACb,CACF,CAAA,CAAA,CAAA,CAAA,CACF,CACF,CAEJ,CAAC"}