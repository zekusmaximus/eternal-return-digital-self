import{u as M,b as o,j as $}from"./react-vendor-DaKsb8LL.js";import{f as z,g as V,h as I,e as D,v as F,d as J,r as O,i as B,j as P,t as x,k,l as H,m as K}from"./constellation-D77L-avc.js";import{j as y}from"./three-vendor-B0HHzWfL.js";const G=N=>{const n=M(),[d,m]=o.useState([]),[p,S]=o.useState(!1),c=o.useRef(new Set),b=$(z),s=N||b,e=$(t=>s?V(t,s):null),g=$(t=>t.nodes.data),A=$(t=>s?I(t,s):0),u=$(t=>t.reader),w=o.useCallback(t=>{const r=g[t];r?(n(D({nodeId:t,character:r.character,temporalValue:r.temporalValue,attractors:r.strangeAttractors})),n(F(t)),n(J("reading")),console.log(`Navigating to node: ${t}`)):console.error(`Could not navigate to node: ${t} - node data not found`)},[n,g]),C=o.useCallback((t,r)=>{n(O({nodeId:t,targetId:r}))},[n]),E=o.useCallback(t=>{n(B(t))},[n]),T=o.useCallback((t,r)=>{n(P({nodeId:t,transformation:r}))},[n]),j=o.useMemo(()=>e?e.revealedConnections:[],[e]),f=o.useMemo(()=>{if(!(e!=null&&e.currentContent))return[];if(e.currentContent.includes("data-transform-type")||e.currentContent.includes("narramorph-")||e.currentContent.includes("[TransformationService]")||e.currentContent.includes("recursive loop detected")||e.currentContent.includes("temporal displacement"))return console.log(`[useNodeState] Content already transformed for node ${e.id}, skipping calculation to prevent infinite loop`),[];const t=x.createTransformationsFromPatterns(u,e),i=[...x.calculateJourneyTransformations(e.id,u).slice(0,2).map(v=>({...v,priority:"high"})),...t.slice(0,2),...e.transformations.flatMap(v=>k.evaluateCondition(v.condition,u,e)?v.transformations.slice(0,1):[])],h=6;return i.length>h?(console.warn(`[useNodeState] Too many transformations (${i.length}) for node ${e.id}, limiting to ${h}`),i.slice(0,h)):i},[e,u]),a=o.useMemo(()=>{if(!(e!=null&&e.currentContent)||f.length===0)return(e==null?void 0:e.currentContent)||null;const t=x.getCachedTransformedContent(e.id,e.currentContent,f,u,e);return x.wrapTransformedContent(t,f)},[e,u,f]);o.useEffect(()=>{if(!e||f.length===0)return;JSON.stringify(d)!==JSON.stringify(f)&&(m(f),S(!0))},[e,f,d]),o.useEffect(()=>{if(p){const t=setTimeout(()=>{S(!1)},2e3);return()=>clearTimeout(t)}},[p]),o.useEffect(()=>{if(!e||!s)return;if(e.currentContent&&(e.currentContent.includes("data-transform-type")||e.currentContent.includes("narramorph-")||e.currentContent.includes("[TransformationService]")||e.currentContent.includes("recursive loop detected")||e.currentContent.includes("temporal displacement"))){console.log(`[useNodeState] Content already transformed for node ${s}, skipping to prevent infinite loop`);return}const t=`${s}-${e.visitCount}`;if(c.current.has(t)){console.log(`[useNodeState] Skipping already applied transformations for ${t}`);return}if(console.log(`[useNodeState] Applying transformations for node ${s} (visitCount: ${e.visitCount})`),c.current.add(t),c.current.size>50){const i=Array.from(c.current).slice(-25);c.current.clear(),i.forEach(h=>c.current.add(h))}if(n(H({nodeId:s,readerState:u})),e.visitCount===1&&T(s,{condition:{visitCount:1},transformations:[{type:"emphasize",selector:"first-paragraph",emphasis:"italic"}]}),e.visitCount>=2&&e.visitCount<=5){const r=x.createTransformationsFromPatterns(u,e);if(r.length>0&&r.length<=3){const i={condition:{visitCount:e.visitCount},transformations:r};T(s,i)}}n(K({nodeId:s,readerState:u}))},[s,e,n,T,u]);const l=o.useCallback(t=>e?k.evaluateCondition(t,u,e):!1,[e,u]);return{node:e,navigateTo:w,revealNodeConnection:C,engageWithAttractor:E,applyNodeTransformation:T,evaluateCondition:l,neighbors:j,revisitCount:A,transformedContent:a,newlyTransformed:p,appliedTransformations:d}},Q=({children:N,transformations:n,isNewlyTransformed:d,nodeId:m})=>{const p=o.useRef(null),S=o.useRef(null),[c,b]=o.useState("idle"),[s,e]=o.useState(n.length),[g,A]=o.useState(0),[u,w]=o.useState(null),[C,E]=o.useState(!0);o.useEffect(()=>{if(g<3){const a=setTimeout(()=>{A(l=>l+1),console.log(`[AnimationContainer] Forced re-render for node: ${m}, attempt: ${g+1}`)},100);return()=>clearTimeout(a)}},[m,g]),o.useEffect(()=>{if(d){b("entering");const a=setTimeout(()=>{b("active")},1e3);return()=>clearTimeout(a)}},[d,n]),o.useEffect(()=>{b("idle"),e(n.length),console.log(`[AnimationContainer] Node changed to: ${m}, transformations: ${n.length}`)},[m,n.length]),o.useLayoutEffect(()=>{if(!p.current)return;const a=()=>{if(!p.current)return;const i=window.getComputedStyle(p.current),h=p.current.getBoundingClientRect(),v={width:h.width,height:h.height,visibility:i.visibility,display:i.display,opacity:i.opacity,position:i.position,zIndex:i.zIndex,overflow:i.overflow};w(v);const R=h.width>0&&h.height>0&&i.visibility!=="hidden"&&i.display!=="none"&&parseFloat(i.opacity)>0;E(R),C!==R&&console.log(`[AnimationContainer] Content visibility changed to: ${R?"visible":"hidden"}`,{nodeId:m,transformations:n.length,animationState:c,measurements:v})};a();const l=setTimeout(a,1100);let t=null;const r=new MutationObserver(i=>{i.length>2&&console.log(`[AnimationContainer] DOM mutations detected: ${i.length}`),t&&clearTimeout(t),t=window.setTimeout(()=>{a(),t=null},500)});return r.observe(p.current,{attributes:!0,childList:!0,subtree:!1}),()=>{clearTimeout(l),r.disconnect()}},[m,n,c,C]);const T=()=>{if(c==="idle")return"";const a=n.some(r=>r.type==="replace"),l=n.some(r=>r.type==="emphasize"),t=n.some(r=>r.type==="expand");return c==="entering"?a?"narramorph-container-replace-active":l?"narramorph-container-emphasis-active":t?"narramorph-container-expand-active":"narramorph-container-transform-active":"narramorph-container-active"},j=()=>{if(n.length===0)return"";const a={};n.forEach(t=>{a[t.type]=(a[t.type]||0)+1});const l=[];return a.replace&&l.push(`${a.replace} replacements`),a.emphasize&&l.push(`${a.emphasize} emphasis`),a.expand&&l.push(`${a.expand} expansions`),a.fragment&&l.push(`${a.fragment} fragmentations`),a.metaComment&&l.push(`${a.metaComment} comments`),l.join(", ")},f=n.length!==s;return o.useEffect(()=>{d&&console.log(`[AnimationContainer] Animation started for node: ${m}`,{transformations:n.length,animationState:c,contentVisible:C})},[d,m,n.length,c,C]),y.jsxs("div",{ref:p,className:`narramorph-animation-container ${T()}`,"data-transformation-count":n.length,"data-newly-transformed":d,"data-animation-state":c,"data-visible":C,"data-render-attempt":g,style:{overflow:"visible",minHeight:"150px",position:"relative",visibility:"visible",display:"block",opacity:1},children:[n.length>0&&y.jsxs("div",{className:`narramorph-transformation-indicator ${d?"active":""}`,title:j(),children:[y.jsx("span",{className:"transformation-count",children:n.length}),f&&y.jsxs("span",{className:"transformation-change-indicator",children:[n.length>s?"+":"",n.length-s]})]}),y.jsx("div",{ref:S,className:"narramorph-animation-content",style:{position:"relative",visibility:"visible",display:"block",opacity:1,minHeight:"100px"},children:g===0?y.jsx("div",{className:"animation-placeholder",style:{padding:"20px",textAlign:"center"},children:y.jsx("p",{children:"Preparing narrative..."})}):N}),!1]})};export{Q as T,G as u};
//# sourceMappingURL=narramorph-hy4W2TfA.js.map
